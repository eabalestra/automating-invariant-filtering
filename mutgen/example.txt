"""
[[CODE]]
 26     private Object[] theArray;
 27     private int topOfStack;
 28     static final int DEFAULT_CAPACITY = 10;
 98     public void pop() throws UnderflowException {
 99         if (isEmpty())
100             throw new UnderflowException();
101 
102         theArray[topOfStack] = null;
103         topOfStack = topOfStack - 1;
104 
105         Object element = theArray[topOfStack + 1];
106         assert (true);
107     }
[[TEST]]
public void test062() throws Throwable {
    DataStructures.StackAr stackAr0 = new DataStructures.StackAr();
    stackAr0.push((java.lang.Object) (-1L));
    java.lang.Object obj3 = stackAr0.top();
    stackAr0.pop();
    java.lang.Object obj5 = stackAr0.top();
    DataStructures.StackAr stackAr6 = new DataStructures.StackAr();
    stackAr6.push((java.lang.Object) (-1L));
    java.lang.Object obj9 = stackAr6.top();
    boolean boolean10 = stackAr6.isFull();
    stackAr0.push((java.lang.Object) stackAr6);
    stackAr0.pop();
    assertTrue(stackAr0.topOfStack >= -1);
}
[[MUTATION]]"""
